{"ast":null,"code":"import{useState,useEffect}from'react';import{LineChart,Line,XAxis,YAxis,CartesianGrid,Tooltip,Legend,ResponsiveContainer}from'recharts';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[data,setData]=useState([]);useEffect(()=>{fetch('http://localhost:5000/api/stocks').then(res=>res.json()).then(jsonData=>{// Get all institution keys (Inst1, Inst2, etc.)\nconst institutions=Object.keys(jsonData);// Use the first institution's dates as reference\nconst chartData=jsonData[institutions[0]].map((item,index)=>{// Start with the date\nconst dataPoint={date:item.date};// Add price data for each institution\ninstitutions.forEach(inst=>{var _jsonData$inst$index;dataPoint[inst]=(_jsonData$inst$index=jsonData[inst][index])===null||_jsonData$inst$index===void 0?void 0:_jsonData$inst$index.price;});return dataPoint;});setData(chartData);}).catch(error=>console.error('Error:',error));},[]);// Define colors for different lines\nconst colors=['#8884d8','#82ca9d','#ffc658','#ff8042'];return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Stock Price Chart\"}),/*#__PURE__*/_jsx(\"div\",{style:{width:'100%',height:'400px'},children:/*#__PURE__*/_jsx(ResponsiveContainer,{children:/*#__PURE__*/_jsxs(LineChart,{data:data,margin:{top:5,right:30,left:20,bottom:5},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"date\",angle:-45,textAnchor:\"end\",height:60}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{}),Object.keys(data[0]||{}).filter(key=>key!=='date').map((inst,index)=>/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:inst,stroke:colors[index%colors.length],name:`${inst} Price`,dot:false},inst))]})})})]});}export default App;","map":{"version":3,"names":["useState","useEffect","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsx","_jsx","jsxs","_jsxs","App","data","setData","fetch","then","res","json","jsonData","institutions","Object","keys","chartData","map","item","index","dataPoint","date","forEach","inst","_jsonData$inst$index","price","catch","error","console","colors","className","children","style","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","angle","textAnchor","filter","key","type","stroke","length","name","dot"],"sources":["C:/Users/rkoef/Documents/Projects/Nykredit/Nykredit/frontend/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport './App.css';\n\nfunction App() {\n  const [data, setData] = useState([]);\n  \n  useEffect(() => {\n    fetch('http://localhost:5000/api/stocks')\n      .then(res => res.json())\n      .then(jsonData => {\n        // Get all institution keys (Inst1, Inst2, etc.)\n        const institutions = Object.keys(jsonData);\n        \n        // Use the first institution's dates as reference\n        const chartData = jsonData[institutions[0]].map((item, index) => {\n          // Start with the date\n          const dataPoint = { date: item.date };\n          \n          // Add price data for each institution\n          institutions.forEach(inst => {\n            dataPoint[inst] = jsonData[inst][index]?.price;\n          });\n          \n          return dataPoint;\n        });\n\n        setData(chartData);\n      })\n      .catch(error => console.error('Error:', error));\n  }, []);\n\n  // Define colors for different lines\n  const colors = ['#8884d8', '#82ca9d', '#ffc658', '#ff8042'];\n\n  return (\n    <div className=\"App\">\n      <h1>Stock Price Chart</h1>\n      <div style={{ width: '100%', height: '400px' }}>\n        <ResponsiveContainer>\n          <LineChart data={data} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis \n              dataKey=\"date\"\n              angle={-45}\n              textAnchor=\"end\"\n              height={60}\n            />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            {Object.keys(data[0] || {}).filter(key => key !== 'date').map((inst, index) => (\n              <Line\n                key={inst}\n                type=\"monotone\"\n                dataKey={inst}\n                stroke={colors[index % colors.length]}\n                name={`${inst} Price`}\n                dot={false}\n              />\n            ))}\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}